{"version":3,"file":"static/js/246.36e86ec2.chunk.js","mappings":"+OAeA,MAAMA,EAAgDC,IACpD,MAAMC,EAAgBC,OAAOC,QAAQH,GAC/BI,EAASF,OAAOE,OAAOJ,GAAa,GAAGK,KAAI,CAACC,EAAQC,KACxD,MAAMC,EAAyC,CAAEC,GAAG,GAADC,OAAKH,IAIxD,OAHAN,EAAcU,SAAQC,IAAmB,IAAjBC,EAAKC,GAAMF,EACjCJ,EAAYK,GAAOC,EAAMP,EAAM,IAE1BC,CAAW,IAEdO,EAAmBb,OAAOc,KAAKhB,GAAaK,KAAKY,IAAK,CAC1DC,MAAOD,EACPE,KAAM,EACNC,UAAU,EACVC,YAAY,MAEd,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAAAC,UACJF,EAAAA,EAAAA,KAACG,EAAAA,GAAQ,CAACC,KAAMtB,EAAQuB,QAASZ,EAAkBa,YAAU,KACvD,EAINC,EAEDC,IAAe,IAAd,KAAEC,GAAMD,EACZ,OACER,EAAAA,EAAAA,KAAA,MACEU,wBAAyB,CACvBC,OAAQF,IAEV,EAIAG,EAAiEC,IAGhE,IAHiE,MACtErB,EAAK,MACLsB,GACDD,EACC,OACEb,EAAAA,EAAAA,KAACe,EAAAA,EAAK,CAACC,UAAU,SAAQd,UACf,OAALV,QAAK,IAALA,EAAAA,EAAS,IAAuBT,KAAKkC,GACtCC,EAAoB,CAAEC,SAAUF,EAAaH,MAAOA,EAAQ,OAExD,EAINM,EAAsDC,IAGrD,IAHsD,OAC3DC,EAAM,MACNR,GACDO,EACC,OACErB,EAAAA,EAAAA,KAACe,EAAAA,EAAK,CAACC,UAAU,SAASO,EAAG,EAAErB,SAC5BtB,OAAOC,QAAQyC,GAAQvC,KAAIyC,IAAqB,IAAnB7B,EAAO8B,GAAMD,EACzC,OAAQ7B,GACN,IAAK,QACH,OAAOK,EAAAA,EAAAA,KAACvB,EAAW,IAAKgD,IAC1B,IAAK,UACH,OACEzB,EAAAA,EAAAA,KAACe,EAAAA,EAAK,CAACC,UAAU,SAAQd,SACtBgB,EAAoB,CAAEC,SAAUM,EAAOX,MAAOA,EAAQ,MAG7D,QACE,OACEY,EAAAA,EAAAA,MAACC,EAAAA,EAAe,CAACC,gBAAiBd,EAAQ,EAAEZ,SAAA,EAC1CF,EAAAA,EAAAA,KAAC6B,EAAAA,EAAgB,CACfC,YAAY9B,EAAAA,EAAAA,KAAC+B,EAAAA,EAAa,IAC1B,gBAAc,iBACd5C,GAAG,gBAAee,UAElBF,EAAAA,EAAAA,KAACgC,EAAAA,EAAU,CAACC,QAAQ,KAAKV,EAAG,EAAErB,SAC3BP,OAGLK,EAAAA,EAAAA,KAACkC,EAAAA,EAAgB,CAAAhC,UACfF,EAAAA,EAAAA,KAACe,EAAAA,EAAK,CAACC,UAAU,SAASmB,WAAY,EAAEjC,SACrCgB,EAAoB,CACnBC,SAAUM,EACVX,MAAOA,EAAQ,WAM7B,KAEI,EAINI,EAGDkB,IAA8B,IAA7B,SAAEjB,EAAQ,MAAEL,EAAQ,GAAGsB,EAC3B,MAAwB,kBAAbjB,GACFnB,EAAAA,EAAAA,KAACO,EAAU,CAACE,KAAMU,IAChBkB,MAAMC,QAAQnB,IAChBnB,EAAAA,EAAAA,KAACY,EAAW,CAACpB,MAAO2B,EAAUL,MAAOA,IACf,kBAAbK,GACTnB,EAAAA,EAAAA,KAACoB,EAAY,CAACE,OAAQH,EAAUL,MAAOA,KAEvCd,EAAAA,EAAAA,KAACgC,EAAAA,EAAU,CAAA9B,SAAA,qBAAAd,cAA8B+B,IAClD,EAGF,G","sources":["ts/shared/render-json-recursive.tsx"],"sourcesContent":["import React, { FC } from 'react';\r\nimport {\r\n  Paper,\r\n  Stack,\r\n  Typography,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from '@mui/material';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport { ArrowDropDown } from '@mui/icons-material';\r\nimport { CustomAccordion } from '../shared/custom-styles';\r\n\r\n// TODO: Render skeleton while subcomponent loads\r\ntype InstanceType = object | string | object[] | string[];\r\n\r\nconst RenderTable: FC<{ [key: string]: string[] }> = (tableObject) => {\r\n  const objectEntries = Object.entries(tableObject);\r\n  const values = Object.values(tableObject)[0].map((_value, index) => {\r\n    const valueObject: { [key: string]: string } = { id: `${index}` };\r\n    objectEntries.forEach(([key, array]) => {\r\n      valueObject[key] = array[index];\r\n    });\r\n    return valueObject;\r\n  });\r\n  const columnDescriptor = Object.keys(tableObject).map((title) => ({\r\n    field: title,\r\n    flex: 1,\r\n    sortable: true,\r\n    filterable: true,\r\n  }));\r\n  return (\r\n    <Paper>\r\n      <DataGrid rows={values} columns={columnDescriptor} hideFooter />\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst RenderText: FC<{\r\n  text: string;\r\n}> = ({ text }) => {\r\n  return (\r\n    <td\r\n      dangerouslySetInnerHTML={{\r\n        __html: text,\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nconst RenderArray: FC<{ array: string[] | object[]; depth: number }> = ({\r\n  array,\r\n  depth,\r\n}) => {\r\n  return (\r\n    <Stack direction=\"column\">\r\n      {((array ?? []) as InstanceType[]).map((subInstance: InstanceType) =>\r\n        RenderJsonRecursive({ instance: subInstance, depth: depth + 1 })\r\n      )}\r\n    </Stack>\r\n  );\r\n};\r\n\r\nconst RenderObject: FC<{ object: object; depth: number }> = ({\r\n  object,\r\n  depth,\r\n}) => {\r\n  return (\r\n    <Stack direction=\"column\" p={1}>\r\n      {Object.entries(object).map(([title, value]) => {\r\n        switch (title) {\r\n          case 'table':\r\n            return <RenderTable {...value} />;\r\n          case 'content':\r\n            return (\r\n              <Stack direction=\"column\">\r\n                {RenderJsonRecursive({ instance: value, depth: depth + 1 })}\r\n              </Stack>\r\n            );\r\n          default:\r\n            return (\r\n              <CustomAccordion defaultExpanded={depth > 1}>\r\n                <AccordionSummary\r\n                  expandIcon={<ArrowDropDown />}\r\n                  aria-controls=\"panel1-content\"\r\n                  id=\"panel1-header\"\r\n                >\r\n                  <Typography variant=\"h5\" p={1}>\r\n                    {title}\r\n                  </Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                  <Stack direction=\"column\" marginLeft={1}>\r\n                    {RenderJsonRecursive({\r\n                      instance: value,\r\n                      depth: depth + 1,\r\n                    })}\r\n                  </Stack>\r\n                </AccordionDetails>\r\n              </CustomAccordion>\r\n            );\r\n        }\r\n      })}\r\n    </Stack>\r\n  );\r\n};\r\n\r\nconst RenderJsonRecursive: FC<{\r\n  instance: InstanceType;\r\n  depth?: number;\r\n}> = ({ instance, depth = 0 }) => {\r\n  if (typeof instance === 'string') {\r\n    return <RenderText text={instance} />;\r\n  } else if (Array.isArray(instance)) {\r\n    return <RenderArray array={instance} depth={depth} />;\r\n  } else if (typeof instance === 'object') {\r\n    return <RenderObject object={instance} depth={depth} />;\r\n  } else {\r\n    return <Typography>{`Unsupported type: ${typeof instance}`}</Typography>;\r\n  }\r\n};\r\n\r\nexport default RenderJsonRecursive;\r\n"],"names":["RenderTable","tableObject","objectEntries","Object","entries","values","map","_value","index","valueObject","id","concat","forEach","_ref","key","array","columnDescriptor","keys","title","field","flex","sortable","filterable","_jsx","Paper","children","DataGrid","rows","columns","hideFooter","RenderText","_ref2","text","dangerouslySetInnerHTML","__html","RenderArray","_ref3","depth","Stack","direction","subInstance","RenderJsonRecursive","instance","RenderObject","_ref4","object","p","_ref5","value","_jsxs","CustomAccordion","defaultExpanded","AccordionSummary","expandIcon","ArrowDropDown","Typography","variant","AccordionDetails","marginLeft","_ref6","Array","isArray"],"sourceRoot":""}